[{"C:\\Users\\jacks\\Project\\pantry\\src\\index.js":"1","C:\\Users\\jacks\\Project\\pantry\\src\\App.js":"2","C:\\Users\\jacks\\Project\\pantry\\src\\reportWebVitals.js":"3","C:\\Users\\jacks\\Project\\pantry\\src\\components\\pantryGrab.jsx":"4","C:\\Users\\jacks\\Project\\pantry\\src\\components\\Header.jsx":"5"},{"size":519,"mtime":1633549174141,"results":"6","hashOfConfig":"7"},{"size":536,"mtime":1634069313517,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1633467740706,"results":"9","hashOfConfig":"7"},{"size":5325,"mtime":1633550609580,"results":"10","hashOfConfig":"7"},{"size":2774,"mtime":1634069712171,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xcd3jg",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jacks\\Project\\pantry\\src\\index.js",[],["24","25"],"C:\\Users\\jacks\\Project\\pantry\\src\\App.js",["26","27"],"C:\\Users\\jacks\\Project\\pantry\\src\\reportWebVitals.js",[],"C:\\Users\\jacks\\Project\\pantry\\src\\components\\pantryGrab.jsx",["28","29","30","31"],"import React, { Component, useState, useEffect } from 'react'\r\nimport \"./../App.css\";\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\n// import BootstrapTable from 'react-bootstrap-table-next';\r\n// import paginationFactory from 'react-bootstrap-table2-paginator';\r\n// import * as ReactBootstrap from 'react-bootstrap';\r\n\r\nexport default class pantryGrab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            url: null,\r\n            ingredients: [\"\", \"\", \"\", \"\", \"\"],\r\n            ingredientList: '',\r\n            recipes: [],\r\n            id: 1,\r\n        }\r\n        // this.handleChange = this\r\n        //     .handleChange\r\n        //     .bind(this);\r\n        // this.handleUpload = this.handleUpload.bind(this);\r\n    }\r\n\r\n    handleChange = e => {\r\n        if (e.target.files[0]) {\r\n            const url = e.target.files[0];\r\n            this.setState(() => ({ url }));\r\n        }\r\n    }\r\n\r\n    myChangeHandler = (e) => {\r\n        //handles state change in input fields\r\n        const { value, name } = e.target;\r\n        let newArray = this.state.ingredients;\r\n        newArray[parseInt(name)] = value;\r\n        this.setState({\r\n            ingredients: newArray\r\n        })\r\n        // handles state change for finished ingredient list based on input fields\r\n        let ingredients = \"\";\r\n        let finalIngredients = \"\";\r\n        for(let i=0; i<5; i++)\r\n        {\r\n            let ingredient = this.state.ingredients[i];\r\n            console.log(ingredient)\r\n            if(ingredient != \"\")\r\n            {\r\n                ingredients += `${ingredient},+`;\r\n            }\r\n            else\r\n            {\r\n                continue;\r\n            }\r\n            finalIngredients = ingredients.substring(ingredients[0], ingredients.length - 2)\r\n            // ingredients.substring()\r\n            console.log(finalIngredients)\r\n        }\r\n        this.setState({ ingredientList: finalIngredients})\r\n    }\r\n    componentDidUpdate() {\r\n        \r\n    }\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let ingredients = [];\r\n        console.log(this.state.ingredientList)\r\n        // axios.get('https://api.spoonacular.com/recipes/716429/information?apiKey=af2bd30b44424d368d723beb5ca12fce&includeNutrition=true')\r\n        axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=af2bd30b44424d368d723beb5ca12fce&ingredients=${this.state.ingredientList}&number=10`)\r\n                .then(res =>\r\n                    this.setState({ recipes: res.data })    \r\n                )\r\n                .then(res =>\r\n                    console.log(this.state.recipes)\r\n            )\r\n        \r\n    }\r\n\r\n    render() {\r\n        // const columns = [\r\n        //     { dataField: \"title\", text: '' },\r\n        //     { dataField: \"image\", text: '' },\r\n        //     { dataField: \"missedIngredientCount\", text: '' },\r\n        // ]\r\n        const container = {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center'\r\n        }\r\n        const outerCard = {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '10px',\r\n            border: 'solid 2px black',\r\n            width: '30%',\r\n            margin: '10px',\r\n            backgroundColor: 'rgba(189, 232, 234)' \r\n        }\r\n        const innerCard = {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '10px',\r\n            border: 'solid 2px black',\r\n            width: '90%',\r\n            margin: '10px',\r\n            backgroundColor: 'white'\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 className=\"pantryHeader\">Enter your ingredients</h1>\r\n                <div>\r\n                    <input name=\"0\" onChange={this.myChangeHandler} defaultValue=\"ingredient\"></input>\r\n                    <input name=\"1\" onChange={this.myChangeHandler} defaultValue=\"ingredient\"></input>\r\n                    <input name=\"2\" onChange={this.myChangeHandler} defaultValue=\"ingredient\"></input>\r\n                    <input name=\"3\" onChange={this.myChangeHandler} defaultValue=\"ingredient\"></input>\r\n                    <input name=\"4\" onChange={this.myChangeHandler} defaultValue=\"ingredient\"></input>\r\n                    <Button onClick={this.handleFormSubmit}>Find Recipe</Button>\r\n                </div>\r\n            <div style={container}>\r\n                { this.state.recipes.map(recipe => {\r\n                return (\r\n                    <div key={recipe.id} style={outerCard} >\r\n                    <h1>{ recipe.title }</h1>\r\n                    <div style={innerCard}>\r\n                        <img src={recipe.image}></img>\r\n                        <p className=\"pText\">Missing Ingredients: {recipe.missedIngredientCount } { recipe.missedIngredients.map(ingredient => {\r\n                return (\r\n                    <p>{ ingredient.name }</p>\r\n                )\r\n                })}</p>\r\n                    </div>\r\n                    </div>\r\n                )\r\n                })}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\jacks\\Project\\pantry\\src\\components\\Header.jsx",["32","33","34","35","36","37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":5,"column":17,"nodeType":"46","messageId":"47","endLine":5,"endColumn":21},{"ruleId":"44","severity":1,"message":"49","line":1,"column":28,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},{"ruleId":"44","severity":1,"message":"50","line":1,"column":38,"nodeType":"46","messageId":"47","endLine":1,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":48,"column":27,"nodeType":"53","messageId":"54","endLine":48,"endColumn":29},{"ruleId":"55","severity":1,"message":"56","line":130,"column":25,"nodeType":"57","endLine":130,"endColumn":49},{"ruleId":"44","severity":1,"message":"58","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":18},{"ruleId":"44","severity":1,"message":"59","line":3,"column":26,"nodeType":"46","messageId":"47","endLine":3,"endColumn":36},{"ruleId":"44","severity":1,"message":"60","line":8,"column":27,"nodeType":"46","messageId":"47","endLine":8,"endColumn":37},{"ruleId":"51","severity":1,"message":"61","line":12,"column":24,"nodeType":"53","messageId":"54","endLine":12,"endColumn":26},{"ruleId":"51","severity":1,"message":"61","line":20,"column":24,"nodeType":"53","messageId":"54","endLine":20,"endColumn":26},{"ruleId":"51","severity":1,"message":"61","line":20,"column":51,"nodeType":"53","messageId":"54","endLine":20,"endColumn":53},{"ruleId":"55","severity":1,"message":"56","line":27,"column":55,"nodeType":"57","endLine":27,"endColumn":105},{"ruleId":"55","severity":1,"message":"56","line":27,"column":105,"nodeType":"57","endLine":27,"endColumn":157},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'setClicked' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]