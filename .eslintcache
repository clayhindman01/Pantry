[{"C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\index.js":"1","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\App.js":"2","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\reportWebVitals.js":"3","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\components\\pantryGrab.jsx":"4","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\components\\Header.jsx":"5","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\components\\Home.jsx":"6"},{"size":519,"mtime":1634228802490,"results":"7","hashOfConfig":"8"},{"size":577,"mtime":1634230242190,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1634228802493,"results":"10","hashOfConfig":"8"},{"size":5908,"mtime":1634230242249,"results":"11","hashOfConfig":"8"},{"size":2781,"mtime":1634230242237,"results":"12","hashOfConfig":"8"},{"size":1381,"mtime":1634230242240,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fm5in6",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\index.js",[],"C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\App.js",["29","30","31"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Pantry from './components/pantryGrab.jsx';\r\nimport Header from \"./components/Header.jsx\";\r\nimport Home from \"./components/Home.jsx\";\r\nimport { Route, Link, Switch, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n        </Switch>\r\n      </Router>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\reportWebVitals.js",[],"C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\components\\pantryGrab.jsx",["32","33","34","35","36"],"import React, { Component, useState, useEffect } from 'react'\r\nimport \"./pantryGrab.css\"\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\n// import BootstrapTable from 'react-bootstrap-table-next';\r\n// import paginationFactory from 'react-bootstrap-table2-paginator';\r\n// import * as ReactBootstrap from 'react-bootstrap';\r\n\r\nexport default class pantryGrab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            url: null,\r\n            ingredients: [\"\", \"\", \"\", \"\", \"\"],\r\n            ingredientList: '',\r\n            recipes: [],\r\n            id: 1,\r\n        }\r\n        // this.handleChange = this\r\n        //     .handleChange\r\n        //     .bind(this);\r\n        // this.handleUpload = this.handleUpload.bind(this);\r\n    }\r\n\r\n    handleChange = e => {\r\n        if (e.target.files[0]) {\r\n            const url = e.target.files[0];\r\n            this.setState(() => ({ url }));\r\n        }\r\n    }\r\n\r\n    myChangeHandler = (e) => {\r\n        //handles state change in input fields\r\n        const { value, name } = e.target;\r\n        let newArray = this.state.ingredients;\r\n        newArray[parseInt(name)] = value;\r\n        this.setState({\r\n            ingredients: newArray\r\n        })\r\n        // handles state change for finished ingredient list based on input fields\r\n        let ingredients = \"\";\r\n        let finalIngredients = \"\";\r\n        for(let i=0; i<6; i++)\r\n        {\r\n            let ingredient = this.state.ingredients[i];\r\n            console.log(ingredient)\r\n            if(ingredient != \"\")\r\n            {\r\n                ingredients += `${ingredient},+`;\r\n            }\r\n            else\r\n            {\r\n                continue;\r\n            }\r\n            finalIngredients = ingredients.substring(ingredients[0], ingredients.length - 2)\r\n            // ingredients.substring()\r\n            console.log(finalIngredients)\r\n        }\r\n        this.setState({ ingredientList: finalIngredients})\r\n    }\r\n    componentDidUpdate() {\r\n        \r\n    }\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let ingredients = [];\r\n        console.log(this.state.ingredientList)\r\n        // axios.get('https://api.spoonacular.com/recipes/716429/information?apiKey=af2bd30b44424d368d723beb5ca12fce&includeNutrition=true')\r\n        axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=af2bd30b44424d368d723beb5ca12fce&ingredients=${this.state.ingredientList}&number=10`)\r\n                .then(res =>\r\n                    this.setState({ recipes: res.data })    \r\n                )\r\n                .then(res =>\r\n                    console.log(this.state.recipes)\r\n            )\r\n        \r\n    }\r\n\r\n    render() {\r\n        // const columns = [\r\n        //     { dataField: \"title\", text: '' },\r\n        //     { dataField: \"image\", text: '' },\r\n        //     { dataField: \"missedIngredientCount\", text: '' },\r\n        // ]\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"main-cont\">\r\n                    <div className=\"selection-container\">\r\n                        <div className=\"pantryHeader-cont\">\r\n                            <h3 className=\"pantryHeader\">Quick Search</h3>\r\n                            <p className=\"pantry-h-text\">Enter a few ingredients to get a short list of recipes</p>\r\n                        </div>\r\n                        <div className=\"list-holder\">\r\n                            <ul className=\"selection-List\">\r\n                                <li className=\"list-piece\"><input name=\"0\" onChange={this.myChangeHandler} defaultValue=\"\"></input></li>\r\n                                <li className=\"list-piece\"><input name=\"1\" onChange={this.myChangeHandler} defaultValue=\"\"></input></li>\r\n                                <li className=\"list-piece\"><input name=\"2\" onChange={this.myChangeHandler} defaultValue=\"\"></input></li>\r\n                            </ul>\r\n                            <ul className=\"selection-List\">\r\n                                <li className=\"list-piece\"><input name=\"3\" onChange={this.myChangeHandler} defaultValue=\"\"></input></li>\r\n                                <li className=\"list-piece\"><input name=\"4\" onChange={this.myChangeHandler} defaultValue=\"\"></input></li>\r\n                                <li className=\"list-piece\"><input name=\"5\" onChange={this.myChangeHandler} defaultValue=\"\"></input></li>\r\n                            </ul>\r\n                        </div>\r\n                        <button onClick={this.handleFormSubmit} className=\"submit\">FIND RECIPES</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pantry-container\">\r\n                    { this.state.recipes.map(recipe => {\r\n                    return (\r\n                        <div key={recipe.id} className=\"outerCard\">\r\n                        <div className=\"innerCard\">\r\n                            <img src={recipe.image} className=\"innerImg\"></img>\r\n                            <div className=\"textBox\">\r\n                                <h3>{ recipe.title }</h3>\r\n                            </div>\r\n                            <div className=\"textBox\">\r\n                                <p className=\"pText\">Missing Ingredients: {recipe.missedIngredientCount } { recipe.missedIngredients.map(ingredient => {\r\n                                    return (\r\n                                        <div className=\"textBox\">\r\n                                            <p>{ ingredient.name }</p>\r\n                                        </div>\r\n                                    )\r\n                                    })}</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\components\\Header.jsx",["37","38","39","40","41","42","43","44"],"import React, { useState } from 'react';\r\nimport \"./Header.css\"\r\nimport { Redirect, Link, withRouter } from 'react-router-dom';\r\n\r\nexport default function Header(props) {\r\n\r\n    const [dropToggle, setDrop] = useState(\"hide\");\r\n    const [clickedInside, setClicked] = useState(false);\r\n\r\n\r\n    const onClick = (event) => {\r\n        if (dropToggle == \"hide\") {\r\n            setDrop(\"show\");\r\n        } else {\r\n            setDrop(\"hide\");\r\n        }\r\n    }\r\n\r\n    const checkOpen = () => {\r\n        if (dropToggle == \"show\" && clickedInside == false){\r\n            setDrop(\"hide\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"headerMain\">\r\n            <div className=\"header\" onClick={checkOpen}>\r\n                <div className=\"logoCont\"><Link to=''><img src=\"../pantry-icon2.png\" className=\"logo\" /><img src=\"../../pantry-icon2.png\" className=\"logo2\"></img></Link></div>\r\n               \r\n                <div className=\"linkCont\">\r\n                    <Link to='/' className=\"smallLinkCont\">\r\n                        <div>\r\n                            <h3 className=\"headerLink\">Home</h3>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='' className=\"smallLinkCont\">\r\n                        <div>\r\n                            <h3 className=\"headerLink\">Saved Recipes</h3>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='portfolio' className=\"smallLinkCont\">\r\n                        <div>\r\n                            <h3 className=\"headerLink\">My Pantry</h3>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='portfolio' className=\"smallLinkCont\">\r\n                        <div>\r\n                            <h3 className=\"headerLink\">Login</h3>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"drop\">\r\n                    <button className=\"dropDownButton\" onClick={onClick}><div class=\"bar1\"></div>\r\n                        <div class=\"bar2\"></div>\r\n                        <div class=\"bar3\"></div></button>\r\n                </div>\r\n                <div className=\"dropDownMenu\" id={dropToggle} >\r\n                    <div className=\"dropItem\"><Link to=\"portfolio\"><h3 className=\"dropDownLink\">Portfolio</h3></Link></div>\r\n                    <div className=\"dropItem\"><Link to=\"portfolio\"><h3 className=\"dropDownLink\">Products</h3></Link></div>\r\n                    <div className=\"dropItem\"><Link to=\"portfolio\"><h3 className=\"dropDownLink\">About Me</h3></Link></div>\r\n                    <div className=\"dropItem\"><Link to=\"portfolio\"><h3 className=\"dropDownLink\">Contact Me</h3></Link></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\clayh\\Documents\\Code\\Pantry\\src\\components\\Home.jsx",[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":14},{"ruleId":"45","severity":1,"message":"50","line":6,"column":17,"nodeType":"47","messageId":"48","endLine":6,"endColumn":21},{"ruleId":"45","severity":1,"message":"51","line":1,"column":28,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"52","line":1,"column":38,"nodeType":"47","messageId":"48","endLine":1,"endColumn":47},{"ruleId":"45","severity":1,"message":"53","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":48,"column":27,"nodeType":"56","messageId":"57","endLine":48,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":115,"column":29,"nodeType":"60","endLine":115,"endColumn":74},{"ruleId":"45","severity":1,"message":"61","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":18},{"ruleId":"45","severity":1,"message":"62","line":3,"column":26,"nodeType":"47","messageId":"48","endLine":3,"endColumn":36},{"ruleId":"45","severity":1,"message":"63","line":8,"column":27,"nodeType":"47","messageId":"48","endLine":8,"endColumn":37},{"ruleId":"54","severity":1,"message":"64","line":12,"column":24,"nodeType":"56","messageId":"57","endLine":12,"endColumn":26},{"ruleId":"54","severity":1,"message":"64","line":20,"column":24,"nodeType":"56","messageId":"57","endLine":20,"endColumn":26},{"ruleId":"54","severity":1,"message":"64","line":20,"column":51,"nodeType":"56","messageId":"57","endLine":20,"endColumn":53},{"ruleId":"58","severity":1,"message":"59","line":27,"column":55,"nodeType":"60","endLine":27,"endColumn":105},{"ruleId":"58","severity":1,"message":"59","line":27,"column":105,"nodeType":"60","endLine":27,"endColumn":157},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Pantry' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'setClicked' is assigned a value but never used.","Expected '===' and instead saw '=='."]